{"version":3,"sources":["views/terminals/Terminals.js"],"names":["Terminals","className","layout","i","x","y","w","h","isResizable","draggableHandle","cols","rowHeight","width","key","name","Component"],"mappings":"yRAqBMA,E,uKA0DF,OACE,6BACE,kBAAC,IAAD,CAAYC,UAAU,SAASC,OAVpB,CACb,CAACC,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,aAAY,GAC7C,CAACL,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAKmBE,gBAAgB,eAAeC,KAAM,EAAGC,UAAW,IAAKC,MAAO,KACpH,yBAAKC,IAAI,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,yCAEE,yBAAKZ,UAAU,uBACb,kBAAC,IAAD,CAAOa,KAAK,eAAeb,UAAU,kBAGzC,kBAAC,IAAD,0CAKJ,yBAAKY,IAAI,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,yCAEE,yBAAKZ,UAAU,uBACb,kBAAC,IAAD,CAAOa,KAAK,eAAeb,UAAU,kBAGzC,kBAAC,IAAD,0CAKJ,yBAAKY,IAAI,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,yCAEE,yBAAKZ,UAAU,uBACb,kBAAC,IAAD,CAAOa,KAAK,eAAeb,UAAU,kBAGzC,kBAAC,IAAD,0CAKJ,yBAAKY,IAAI,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,yCAEE,yBAAKZ,UAAU,uBACb,kBAAC,IAAD,CAAOa,KAAK,eAAeb,UAAU,kBAGzC,kBAAC,IAAD,0CAKJ,yBAAKY,IAAI,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,yCAEE,yBAAKZ,UAAU,uBACb,kBAAC,IAAD,CAAOa,KAAK,eAAeb,UAAU,kBAGzC,kBAAC,IAAD,4iB,GAzHkBc,aA2ITf","file":"static/js/49.b6c9012d.chunk.js","sourcesContent":["//import React from 'react'\nimport React, { Component } from 'react';\nimport { Terminal } from 'xterm'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CRow,\n  CCollapse,\n  CFade,\n  CSwitch,\n  CLink\n} from  '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n//import * as attach from 'xterm/lib/addons/attach/attach'\nimport GridLayout from 'react-grid-layout';\n\n//const Terminals = () => {\nclass Terminals extends Component {\n\n/*\n  async componentDidMount() {\n    const protocol = (window.location.protocol === 'https:') ? 'wss://' : 'ws://';\n    console.log(\"TEST TEST FRIPPE\" + this.props.termy);\n    let socketURL = protocol + window.location.hostname + ((window.location.port) ? (':' + window.location.port) : '') + '/terminals/'\n    \n    const term = new Terminal({\n\tcursorBlink: \"block\"\n    });\n    term.setOption('theme', {\n        background: '#0e2a35',\n        foreground: '#8b9fa9',\n        fontFamily: 'Lucida Console',\n        fontSize: '15px',\n        cols: 80,\n\trows: 24\n       \n    });\n    term.open(this.termElm);\n    //term.open(document.getElementById(this.props.termy));\n\n    term.attachCustomKeyEventHandler(function (e) {\n  \t// Ctrl + Shift + C\n     \tif (e.ctrlKey && e.shiftKey && (e.keyCode === 3)) {\n    \t\tvar copySucceeded = document.execCommand('copy');\n    \t\tconsole.log('copy succeeded', copySucceeded);\n    \t\treturn false;\n  \t}\n    });\n    \n    const res = await fetch('http://localhost:4001/rest/v1/wifi/scan' , {method: 'GET'})\n    const processId = await res.text()\n    \n    // const pid = processId;\n    socketURL += processId;\n    const socket = new WebSocket(socketURL);\n    \n    socket.onopen = () => {\n      //term.attach(socket);\n      term._initialized = true;\n    }\n    this.term = term\n  }\n*/\n\n  render() {\n\n    // layout is an array of objects, see the demo for more complete usage\n    const layout = [\n      {i: 'a', x: 0, y: 0, w: 1, h: 1, isResizable:true },\n      {i: 'b', x: 0, y: 0, w: 1, h: 1},\n      {i: 'c', x: 0, y: 0, w: 1, h: 1},\n      {i: 'd', x: 0, y: 0, w: 2, h: 1},\n      {i: 'e', x: 0, y: 0, w: 2, h: 2}\n    ];\n\n    return (\n      <div>\n        <GridLayout className=\"layout\" layout={layout} draggableHandle=\".card-header\" cols={3} rowHeight={110} width={1000}>\n\t\t<div key=\"a\">\n\t\t  <CCard>\n\t\t    <CCardHeader>\n\t\t      Terminal 1 - 192.168.0.13 (@root)\n\t\t      <div className=\"card-header-actions\">\n\t\t        <CIcon name=\"cil-x-circle\" className=\"float-right\"/>\n\t\t      </div>\n\t\t    </CCardHeader>\n\t\t    <CCardBody>\t\t\n\t\t\tSome text to fill out the card.  \t\t\n\t\t    </CCardBody>\n\t\t  </CCard>\n\t\t</div>\n\t\t<div key=\"b\">\n\t\t  <CCard>\n\t\t    <CCardHeader>\n\t\t      Terminal 2 - 192.168.0.13 (@root)\n\t\t      <div className=\"card-header-actions\">\n\t\t        <CIcon name=\"cil-x-circle\" className=\"float-right\"/>\n\t\t      </div>\n\t\t    </CCardHeader>\n\t\t    <CCardBody>\t\t\n\t\t\tSome text to fill out the card.  \t\t\n\t\t    </CCardBody>\n\t\t  </CCard>\n\t\t</div>\n\t\t<div key=\"c\">\n\t\t  <CCard>\n\t\t    <CCardHeader>\n\t\t      Terminal 3 - 192.168.0.13 (@root)\n\t\t      <div className=\"card-header-actions\">\n\t\t        <CIcon name=\"cil-x-circle\" className=\"float-right\"/>\n\t\t      </div>\n\t\t    </CCardHeader>\n\t\t    <CCardBody>\t\t\n\t\t\tSome text to fill out the card.  \t\t\n\t\t    </CCardBody>\n\t\t  </CCard>\n\t\t</div>\n\t\t<div key=\"d\">\n\t\t  <CCard>\n\t\t    <CCardHeader>\n\t\t      Terminal 4 - 192.168.0.13 (@root)\n\t\t      <div className=\"card-header-actions\">\n\t\t        <CIcon name=\"cil-x-circle\" className=\"float-right\"/>\n\t\t      </div>\n\t\t    </CCardHeader>\n\t\t    <CCardBody>\t\t\n\t\t\tSome text to fill out the card.  \t\t\n\t\t    </CCardBody>\n\t\t  </CCard>\n\t\t</div>\n\t\t<div key=\"e\">\n\t\t  <CCard>\n\t\t    <CCardHeader>\n\t\t      Terminal 5 - 192.168.0.13 (@root)\n\t\t      <div className=\"card-header-actions\">\n\t\t        <CIcon name=\"cil-x-circle\" className=\"float-right\"/>\n\t\t      </div>\n\t\t    </CCardHeader>\n\t\t    <CCardBody>\t\t\n\t\t\tSome text to fill out the card. This do require some more text to fill out the full card. This was not eough so I added some more text\n                        Some text to fill out the card. This do require some more text to fill out the full card. This was not eough so I added some more text\n                        Some text to fill out the card. This do require some more text to fill out the full card. This was not eough so I added some more text\n                        Some text to fill out the card. This do require some more text to fill out the full card. This was not eough so I added some more text\n                          \t\t\n\t\t    </CCardBody>\n\t\t  </CCard>\n\t\t</div>\n        </GridLayout>\n\t\n\n      </div>\n    );\n  }\n}\n/* <div className={this.props.termy} ref={ref=>this.termElm = ref}></div> */\n\nexport default Terminals\n"],"sourceRoot":""}