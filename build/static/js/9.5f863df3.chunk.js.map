{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/settings/Settings.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","getBadge","status","getWifiIcon","quality","console","log","sleep","milliseconds","setTimeout","fields","Settings","state","settings","modal","currentSelected","currentNetwork","progress","toggleModal","setState","currentState","toggle","index","networks","ssid","fn","fetch","method","mode","res","text","data","catch","this","self","args","arguments","apply","err","undefined","json","xs","lg","className","style","height","color","variant","size","onClick","onClickScan","items","itemsPerPage","pagination","scopedSlots","item","alert","onClickButton","getButton","parseInt","shape","position","indexOf","newDetails","splice","toggleDetails","includes","show","username","registered","onClose","closeButton","row","md","htmlFor","type","id","placeholder","autoComplete","Component"],"mappings":"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","file":"static/js/9.5f863df3.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","//import React from 'react'\nimport React, { Component, useState  } from 'react';\n\nimport {\n  CButton,\n  CCollapse,\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CInputGroup,\n  CInput,\n  CLabel,\n  CFormText,\n  CFormGroup,\n  CProgress,\n  CProgressBar\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'connected': return 'success'\n    case 'unavailable': return 'danger'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst getButton = status => {\n  switch (status) {\n    case 'connected': return 'disconnect'\n    case 'configured': return 'connect'\n    case 'unavailable': return 'warning'\n    case 'not used': return 'add'\n    default: return 'primary'\n  }\n}\n\nconst getWifiIcon = quality => {\n  console.log(quality);\n  \n  if (quality<20) {\n  \treturn 'cilWifiSignal0';\n  } else if (quality<40) {\n  \treturn 'cilWifiSignal1';\n  } else if (quality<60) {\n  \treturn 'cilWifiSignal2';\n  } else if (quality<80) {\n  \treturn 'cilWifiSignal3';\n  } else {\n  \treturn 'cilWifiSignal0';\n  }\n  return 'cil-wifi-signal-off';\n}\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst onClickButton = (index,status) => {\n  switch (status) {\n    case 'connected': alert(\"DISCONNECT\");\n    case 'configured': console.log(\"MODAL\");\n    case 'unavailable': return 'warning'\n    case 'not used': return 'add'\n    default: return 'primary'\n  }\n}\n\nconst toggleDetails = (index) => {\n    const position = this.state.settings.networks.indexOf(index)\n    let newDetails = this.state.settings.networks.slice()\n\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...this.state.settings.networks, index]\n    }\n\n    //setDetails(newDetails)\n}\nconst networkName = () => {\n\t\"Networkname1\";\t\n\t//this.state.settings.networks[this.state.currentSelected]\n};\n\nconst fields = ['ssid', 'encryption', 'rssi', 'quality', 'status']\n\nlet counter = 0\n\nclass Settings extends Component {\n        \n\t/*\n\tFor example:\n\tHigh quality: 90% ~= -55db\n\tMedium quality: 50% ~= -75db\n\tLow quality: 30% ~= -85db\n\tUnusable quality: 8% ~= -96db\n\t*/\n\n\tstate = {\n\t\tsettings: [],\n\t\tmodal: false,\n                currentSelected: 0,\n                currentNetwork: \"\",\n                progress: 0 \n\t};\n      \n      toggleModal = () => {\n  \tthis.setState((currentState) => ({\n\t    modal: !currentState.modal            \n         }));\n      }\n\n      async onClickScan() {\n   \tlet i = 0\n        //let progress = 0\n\n        fetch('http://slowwly.robertomurray.co.uk/delay/7000/url/http://google.co.uk' , {method: 'GET', mode: 'no-cors'})\n          .then(res => res.text())\n          .then((data) => {\n            console.log(data)\n            //this.setState({ settings: data.settings })\n            this.setState((currentState) => ({\n\t      progress: 95           \t  \n            }));\n\n        })\n        .catch(console.log)\n\t\n   \tfor (i; i<20; i++) {\n\t\tawait sleep(500)\n\t\tif (this.state.progress != 100) {\n\t\t   //progress += 10;\n\t\t   //counter += 10;\n\t\t   console.log(\"Progress: \" + this.state.progress)\n\t\t   this.setState((currentState) => ({\n\t    \t      progress: this.state.progress + 5           \t  \n         \t   }));\n                } else {\n\t\t    break\n \t\t}\n   \t}  \n        await sleep(1000) \n\tthis.setState((currentState) => ({\n\t   progress: 0           \t  \n        }));\n      };\n\n      toggle = (index) => {\n         this.setState((currentState) => ({\n\t    modal: !currentState.modal,\n            currentSelected: index,\n            currentNetwork: currentState.settings.networks[index].ssid\n         }));\n      };\n\n      componentDidMount() {\n        fetch('http://192.168.0.209:4001/rest/v1/settings' , {method: 'GET'})\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ settings: data.settings })\n        })\n        .catch(console.log)\n      };\n\n  render() {\n    return (\n    <>\n\n\n      <CRow>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n\t      <CProgress value={this.state.progress} className=\"mb-3\" style={{height: \"3px\"}}/>\n              Wifi Networks\n\t\t&nbsp;&nbsp;\n\n              \t<CButton\n\t\t   color=\"primary\"\n\t\t   variant=\"outline\"\n\t\t   size=\"sm\"\n\t\t   onClick={()=>{this.onClickScan()}}\n\t\t        >\n\t\t     Rescan\n \t\t</CButton>\n\n            </CCardHeader>\n\n            <CCardBody>\n            <CDataTable\n              items={this.state.settings.networks}\n              fields={fields}\n              size=\"sm\"\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item,index)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n\t\t\t&nbsp;&nbsp;\n                      <CButton\n                          color=\"light\"\n\t\t          size=\"sm\"\n\t\t\t  onClick={()=>{onClickButton(index, item.status);this.toggle(index)}}\n\t\t\t  >\n                          \n                          {getButton(item.status)}\n\t\t        </CButton>\n                    </td>\n                  ),\n                'quality':\n                  (item)=>(\n                    <td>\n\n\t\t      <CIcon size={'sm'} name={getWifiIcon(parseInt(item.quality))} />\n                    </td>\n                  ),\n              'show_details':\n\t\t  (item, index)=>{\n\t\t    return (\n\t\t      <td className=\"py-2\">\n                        <div>\n\t\t        <CButton\n\t\t          color=\"primary\"\n\t\t          variant=\"outline\"\n\t\t          shape=\"square\"\n\t\t          size=\"sm\"\n\t\t          onClick={()=>{toggleDetails(index)}}\n\t\t        >\n\t\t          {this.state.settings.networks.includes(index) ? 'Hide' : 'Show'}\n\t\t        </CButton>\n\t\t\t</div>\n\t\t      </td>\n\t\t      )\n\t\t  },\n\t\t'details':\n\t\t    (item, index)=>{\n\t\t      return (\n\t\t      <CCollapse show={this.state.settings.networks.includes(index)}>\n\t\t        <CCardBody>\n\t\t          <h4>\n\t\t            {item.username}\n\t\t          </h4>\n\t\t          <p className=\"text-muted\">User since: {item.registered}</p>\n\t\t          <CButton size=\"sm\" color=\"info\">\n\t\t            User Settings\n\t\t          </CButton>\n\t\t          <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n\t\t            Delete\n\t\t          </CButton>\n\t\t        </CCardBody>\n\t\t      </CCollapse>\n\t\t    )\n\t\t  }\n\t      }}\n            />\n\n            <CModal \n              show={this.state.modal} \n              onClose={ () => { this.toggleModal() } }\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Add Network - {this.state.currentNetwork} </CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"password-input\">Network Password</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"password\" id=\"password-input\" name=\"password-input\" placeholder=\"Password\" autoComplete=\"new-password\" />\n                    <CFormText className=\"help-block\">Please try to enter the correct password</CFormText>\n                  </CCol>\n                </CFormGroup>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\">Save</CButton>{' '}\n                <CButton \n                  color=\"secondary\" \n                  onClick={ () => { this.toggleModal() } }\n                >Cancel</CButton>\n              </CModalFooter>\n            </CModal>\n\n\t\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n      \n      </CRow>\n    </>\n    );\n  }\n}\n\nexport default Settings\n"],"sourceRoot":""}